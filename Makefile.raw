
default: all

CC = gcc

#CONFIG += wine
#CONFIG += winegcc
CONFIG += ansi
CONFIG += debug
#CONFIG += ultradebug
#CONFIG += fast
#CONFIG += noassert

CxPath = ../cx
CxPpPath = ../cx-pp
BinPath = ../bin
BldPath = cx-new

ExeList = cx test
Deps := $(ExeList)
ExeList := $(addprefix $(BinPath)/,$(ExeList))
Objs = $(addprefix $(BldPath)/,$(addsuffix .o,$(Deps)))

include $(CxPath)/include.mk

TestExe = test
ExecTest = ./$(TestExe)

ifneq (,$(filter wine,$(CONFIG)))
	TestExe := $(TestExe).exe
	ExecTest = wine $(TestExe)
endif
ifneq (,$(filter winegcc,$(CONFIG)))
	TestExe := $(TestExe).exe
	ExecTest := $(ExecTest)
endif

CExes = $(CxExe) $(TestExe)

all: $(CExes)

$(TestExe): $(BldPath)/test.o $(CxObjs)
	$(CC) $(CFLAGS) $^ -o $@ $(LFLAGS)

.PHONY: cx
cx: $(CxExe)

.PHONY: pp
pp: $(CxExe)
	$(foreach f,$(addsuffix .c,cx $(CxDeps)), \
		$(ExecCx) -x $(f) -o $(CxPpPath)/$(f) ;)
	$(foreach f,$(CxHFiles), \
		$(ExecCx) -x $(f) -o $(CxPpPath)/$(f) ;)

.PHONY: exectest
exectest: $(TestExe)
	$(ExecTest)

.PHONY: clean
clean:
	rm -fr $(PfxBldPath)
	rm -f $(CxPpPath)/*.o $(CExes)
ifneq (,$(filter winegcc,$(CONFIG)))
	rm -f $(CxExe).so $(TestExe).so
endif

.PHONY: distclean
distclean: clean
	rm -f $(CxPpExe)
ifneq (,$(filter winegcc,$(CONFIG)))
	rm -f $(CxPpExe).so
endif

